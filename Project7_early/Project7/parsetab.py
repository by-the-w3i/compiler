
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=leftBOOL_ORleftBOOL_ANDleft<>COMP_EQUCOMP_NEQUCOMP_LTECOMP_GTEleft+-left*/right!rightAR_METHOD_SIZEAR_METHOD_RESIZETYPE COMMAND_PRINT COMMAND_RANDOM ID VAL_LITERAL CHAR_LITERAL ASSIGN_ADD ASSIGN_SUB ASSIGN_MULT ASSIGN_DIV COMP_EQU COMP_NEQU COMP_LTE COMP_GTE BOOL_AND BOOL_OR WHITESPACE COMMENT OPEN_BLOCK CLOSE_BLOCK COMMAND_IF COMMAND_ELSE COMMAND_WHILE COMMAND_BREAK ARRAY_TYPE STRING_TYPE STRING_LITERAL AR_METHOD_SIZE AR_METHOD_RESIZE FUNC_DEFINE FUNC_RETURN\n    program : statements\n    \n    statements : statements statement\n               |\n    \n    statement : expr ';'\n              | declaration ';'\n              | block\n              | if_block\n              | while_loop\n              | break ';'\n              | return_statement ';'\n              | function_def\n    \n    statement : ';'\n    \n    block : OPEN_BLOCK statements CLOSE_BLOCK\n    \n    if_block : COMMAND_IF '(' expr ')' statement\n             | COMMAND_IF '(' expr ')' statement COMMAND_ELSE statement\n    \n    break : COMMAND_BREAK\n    \n    while_loop : COMMAND_WHILE '(' expr ')' statement\n    \n    declaration : TYPE ID\n                | TYPE ID '=' expr\n    \n    declaration : ARRAY_TYPE '(' TYPE ')' ID\n                | ARRAY_TYPE '(' TYPE ')' ID '=' expr\n    \n    declaration : STRING_TYPE ID\n                | STRING_TYPE ID '=' expr\n    \n    all_type : TYPE\n             | STRING_TYPE\n             | ARRAY_TYPE '(' TYPE ')'\n    \n    return_statement : FUNC_RETURN expr\n    \n    function_def : FUNC_DEFINE all_type ID '(' parameters ')' block\n                 | FUNC_DEFINE all_type ID '(' ')' block\n    \n    parameters : parameters ',' parameter\n               | parameter\n    \n    parameter : all_type ID\n    \n    expr : '[' elements ']'\n         | '[' ']'\n         | STRING_LITERAL\n    \n    elements : expr\n             | elements ',' expr\n    \n    expr : expr AR_METHOD_SIZE '(' ')'\n         | expr AR_METHOD_SIZE '(' expr ')'\n    \n    expr : expr AR_METHOD_RESIZE '(' arguments ')'\n    \n    expr : variable '[' expr ']'\n         | variable '[' expr ']' '=' expr\n    \n    expr : expr '+' expr\n    \n    expr : expr '-' expr\n    \n    expr : expr '*' expr\n    \n    expr : expr '/' expr\n    \n    expr : expr ASSIGN_ADD expr\n    \n    expr : expr ASSIGN_SUB expr\n    \n    expr : expr ASSIGN_MULT expr\n    \n    expr : expr ASSIGN_DIV expr\n    \n    expr : '(' expr ')'\n    \n    expr : expr COMP_EQU expr\n    \n    expr : expr COMP_NEQU expr\n    \n    expr : expr '<' expr\n    \n    expr : expr COMP_LTE expr\n    \n    expr : expr '>' expr\n    \n    expr : expr COMP_GTE expr\n    \n    expr : expr BOOL_AND expr\n    \n    expr : expr BOOL_OR expr\n    \n    expr : '!' expr\n    \n    expr : COMMAND_PRINT '(' arguments ')'\n    \n    arguments : expr\n              | arguments ',' expr\n    \n    expr : COMMAND_RANDOM '(' expr ')'\n    \n    expr : VAL_LITERAL\n         | '-' VAL_LITERAL\n    \n    expr : CHAR_LITERAL\n    \n    expr : variable\n         | '-' variable\n    \n    expr : variable '=' expr\n    \n    variable : ID\n    "
    
_lr_action_items = {';':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,21,22,24,27,30,33,52,53,54,56,61,62,63,66,68,69,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,99,106,112,115,116,118,119,121,122,123,126,127,130,131,132,138,140,144,145,146,147,],[-3,5,-2,33,-12,52,-6,-7,-8,53,54,-11,-35,-68,-65,-67,-71,-3,-16,-4,-5,-9,-10,-34,-66,-69,-60,-18,-22,5,-27,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,-70,-13,-38,-41,-61,-64,-19,-23,5,5,-39,-40,-20,-14,-17,-42,5,-29,-21,-15,-28,]),'[':([0,2,3,5,7,8,9,12,13,15,16,18,24,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,13,-2,-12,-6,-7,-8,-11,13,13,59,13,-71,-3,13,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,-9,-10,13,13,13,13,13,13,13,13,13,13,13,13,-13,13,13,13,13,-14,-17,13,13,-29,-15,-28,]),'STRING_LITERAL':([0,2,3,5,7,8,9,12,13,15,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,14,-2,-12,-6,-7,-8,-11,14,14,14,-3,14,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-5,-9,-10,14,14,14,14,14,14,14,14,14,14,14,14,-13,14,14,14,14,-14,-17,14,14,-29,-15,-28,]),'(':([0,2,3,5,7,8,9,12,13,15,18,19,20,25,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,76,77,78,96,103,105,106,109,117,122,123,128,131,132,139,140,144,146,147,],[-3,15,-2,-12,-6,-7,-8,-11,15,15,15,64,65,67,-3,70,71,15,-4,77,78,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,-9,-10,15,15,15,15,15,15,15,110,15,15,15,15,15,-13,124,15,15,15,15,-14,-17,15,15,-29,-15,-28,]),'!':([0,2,3,5,7,8,9,12,13,15,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,18,-2,-12,-6,-7,-8,-11,18,18,18,-3,18,-4,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,-9,-10,18,18,18,18,18,18,18,18,18,18,18,18,-13,18,18,18,18,-14,-17,18,18,-29,-15,-28,]),'COMMAND_PRINT':([0,2,3,5,7,8,9,12,13,15,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,19,-2,-12,-6,-7,-8,-11,19,19,19,-3,19,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,-9,-10,19,19,19,19,19,19,19,19,19,19,19,19,-13,19,19,19,19,-14,-17,19,19,-29,-15,-28,]),'COMMAND_RANDOM':([0,2,3,5,7,8,9,12,13,15,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,20,-2,-12,-6,-7,-8,-11,20,20,20,-3,20,-4,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-5,-9,-10,20,20,20,20,20,20,20,20,20,20,20,20,-13,20,20,20,20,-14,-17,20,20,-29,-15,-28,]),'VAL_LITERAL':([0,2,3,5,7,8,9,12,13,15,17,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,21,-2,-12,-6,-7,-8,-11,21,21,61,21,-3,21,-4,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-5,-9,-10,21,21,21,21,21,21,21,21,21,21,21,21,-13,21,21,21,21,-14,-17,21,21,-29,-15,-28,]),'-':([0,2,3,4,5,7,8,9,12,13,14,15,16,18,21,22,24,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,105,106,107,108,111,112,114,115,116,117,118,119,121,122,123,126,127,128,129,131,132,138,139,140,144,145,146,147,],[-3,17,-2,37,-12,-6,-7,-8,-11,17,-35,17,-68,17,-65,-67,-71,-3,17,-4,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-5,-9,-10,-34,37,37,17,17,-66,-69,-60,17,17,17,17,17,37,17,17,-43,-44,-45,-46,37,37,37,37,37,37,37,37,37,37,37,37,-33,17,-51,37,37,37,37,17,17,-13,37,37,37,-38,37,-41,-61,17,-64,37,37,17,17,-39,-40,17,37,-14,-17,37,17,17,-29,37,-15,-28,]),'CHAR_LITERAL':([0,2,3,5,7,8,9,12,13,15,18,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,77,78,96,103,105,106,117,122,123,128,131,132,139,140,144,146,147,],[-3,22,-2,-12,-6,-7,-8,-11,22,22,22,-3,22,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-5,-9,-10,22,22,22,22,22,22,22,22,22,22,22,22,-13,22,22,22,22,-14,-17,22,22,-29,-15,-28,]),'TYPE':([0,2,3,5,7,8,9,12,27,32,33,52,53,54,67,69,106,110,122,123,124,131,132,140,143,144,146,147,],[-3,23,-2,-12,-6,-7,-8,-11,-3,74,-4,-5,-9,-10,104,23,-13,125,23,23,74,-14,-17,23,74,-29,-15,-28,]),'ARRAY_TYPE':([0,2,3,5,7,8,9,12,27,32,33,52,53,54,69,106,122,123,124,131,132,140,143,144,146,147,],[-3,25,-2,-12,-6,-7,-8,-11,-3,76,-4,-5,-9,-10,25,-13,25,25,76,-14,-17,25,76,-29,-15,-28,]),'STRING_TYPE':([0,2,3,5,7,8,9,12,27,32,33,52,53,54,69,106,122,123,124,131,132,140,143,144,146,147,],[-3,26,-2,-12,-6,-7,-8,-11,-3,75,-4,-5,-9,-10,26,-13,26,26,75,-14,-17,26,75,-29,-15,-28,]),'OPEN_BLOCK':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,135,140,142,144,146,147,],[-3,27,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,27,-13,27,27,-14,-17,27,27,27,-29,-15,-28,]),'COMMAND_IF':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,140,144,146,147,],[-3,28,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,28,-13,28,28,-14,-17,28,-29,-15,-28,]),'COMMAND_WHILE':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,140,144,146,147,],[-3,29,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,29,-13,29,29,-14,-17,29,-29,-15,-28,]),'COMMAND_BREAK':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,140,144,146,147,],[-3,30,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,30,-13,30,30,-14,-17,30,-29,-15,-28,]),'FUNC_RETURN':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,140,144,146,147,],[-3,31,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,31,-13,31,31,-14,-17,31,-29,-15,-28,]),'FUNC_DEFINE':([0,2,3,5,7,8,9,12,27,33,52,53,54,69,106,122,123,131,132,140,144,146,147,],[-3,32,-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,32,-13,32,32,-14,-17,32,-29,-15,-28,]),'ID':([0,2,3,5,7,8,9,12,13,15,17,18,23,26,27,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,64,65,69,70,71,73,74,75,77,78,96,103,105,106,117,120,122,123,128,131,132,133,137,139,140,144,146,147,],[-3,24,-2,-12,-6,-7,-8,-11,24,24,24,24,66,68,-3,24,-4,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-5,-9,-10,24,24,24,24,24,24,24,109,-24,-25,24,24,24,24,24,-13,24,130,24,24,24,-14,-17,141,-26,24,24,-29,-15,-28,]),'$end':([0,1,2,3,5,7,8,9,12,33,52,53,54,106,131,132,144,146,147,],[-3,0,-1,-2,-12,-6,-7,-8,-11,-4,-5,-9,-10,-13,-14,-17,-29,-15,-28,]),'CLOSE_BLOCK':([3,5,7,8,9,12,27,33,52,53,54,69,106,131,132,144,146,147,],[-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,106,-13,-14,-17,-29,-15,-28,]),'AR_METHOD_SIZE':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[34,-35,-68,-65,-67,-71,-34,34,34,-66,-69,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-33,-51,34,34,34,34,34,34,34,-38,34,-41,-61,-64,34,34,-39,-40,34,34,34,]),'AR_METHOD_RESIZE':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[35,-35,-68,-65,-67,-71,-34,35,35,-66,-69,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-33,-51,35,35,35,35,35,35,35,-38,35,-41,-61,-64,35,35,-39,-40,35,35,35,]),'+':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[36,-35,-68,-65,-67,-71,-34,36,36,-66,-69,-60,36,-43,-44,-45,-46,36,36,36,36,36,36,36,36,36,36,36,36,-33,-51,36,36,36,36,36,36,36,-38,36,-41,-61,-64,36,36,-39,-40,36,36,36,]),'*':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[38,-35,-68,-65,-67,-71,-34,38,38,-66,-69,-60,38,38,38,-45,-46,38,38,38,38,38,38,38,38,38,38,38,38,-33,-51,38,38,38,38,38,38,38,-38,38,-41,-61,-64,38,38,-39,-40,38,38,38,]),'/':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[39,-35,-68,-65,-67,-71,-34,39,39,-66,-69,-60,39,39,39,-45,-46,39,39,39,39,39,39,39,39,39,39,39,39,-33,-51,39,39,39,39,39,39,39,-38,39,-41,-61,-64,39,39,-39,-40,39,39,39,]),'ASSIGN_ADD':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[40,-35,-68,-65,-67,-71,-34,40,40,-66,-69,-60,40,-43,-44,-45,-46,40,40,40,40,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,40,-70,40,40,40,40,40,-38,40,-41,-61,-64,40,40,-39,-40,40,-42,40,]),'ASSIGN_SUB':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[41,-35,-68,-65,-67,-71,-34,41,41,-66,-69,-60,41,-43,-44,-45,-46,41,41,41,41,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,41,-70,41,41,41,41,41,-38,41,-41,-61,-64,41,41,-39,-40,41,-42,41,]),'ASSIGN_MULT':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[42,-35,-68,-65,-67,-71,-34,42,42,-66,-69,-60,42,-43,-44,-45,-46,42,42,42,42,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,42,-70,42,42,42,42,42,-38,42,-41,-61,-64,42,42,-39,-40,42,-42,42,]),'ASSIGN_DIV':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[43,-35,-68,-65,-67,-71,-34,43,43,-66,-69,-60,43,-43,-44,-45,-46,43,43,43,43,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,43,-70,43,43,43,43,43,-38,43,-41,-61,-64,43,43,-39,-40,43,-42,43,]),'COMP_EQU':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[44,-35,-68,-65,-67,-71,-34,44,44,-66,-69,-60,44,-43,-44,-45,-46,44,44,44,44,-52,-53,-54,-55,-56,-57,44,44,-33,-51,44,44,44,44,44,44,44,-38,44,-41,-61,-64,44,44,-39,-40,44,44,44,]),'COMP_NEQU':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[45,-35,-68,-65,-67,-71,-34,45,45,-66,-69,-60,45,-43,-44,-45,-46,45,45,45,45,-52,-53,-54,-55,-56,-57,45,45,-33,-51,45,45,45,45,45,45,45,-38,45,-41,-61,-64,45,45,-39,-40,45,45,45,]),'<':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[46,-35,-68,-65,-67,-71,-34,46,46,-66,-69,-60,46,-43,-44,-45,-46,46,46,46,46,-52,-53,-54,-55,-56,-57,46,46,-33,-51,46,46,46,46,46,46,46,-38,46,-41,-61,-64,46,46,-39,-40,46,46,46,]),'COMP_LTE':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[47,-35,-68,-65,-67,-71,-34,47,47,-66,-69,-60,47,-43,-44,-45,-46,47,47,47,47,-52,-53,-54,-55,-56,-57,47,47,-33,-51,47,47,47,47,47,47,47,-38,47,-41,-61,-64,47,47,-39,-40,47,47,47,]),'>':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[48,-35,-68,-65,-67,-71,-34,48,48,-66,-69,-60,48,-43,-44,-45,-46,48,48,48,48,-52,-53,-54,-55,-56,-57,48,48,-33,-51,48,48,48,48,48,48,48,-38,48,-41,-61,-64,48,48,-39,-40,48,48,48,]),'COMP_GTE':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[49,-35,-68,-65,-67,-71,-34,49,49,-66,-69,-60,49,-43,-44,-45,-46,49,49,49,49,-52,-53,-54,-55,-56,-57,49,49,-33,-51,49,49,49,49,49,49,49,-38,49,-41,-61,-64,49,49,-39,-40,49,49,49,]),'BOOL_AND':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[50,-35,-68,-65,-67,-71,-34,50,50,-66,-69,-60,50,-43,-44,-45,-46,50,50,50,50,-52,-53,-54,-55,-56,-57,-58,50,-33,-51,50,50,50,50,50,50,50,-38,50,-41,-61,-64,50,50,-39,-40,50,50,50,]),'BOOL_OR':([4,14,16,21,22,24,56,57,58,61,62,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,107,108,111,112,114,115,116,118,119,121,126,127,129,138,145,],[51,-35,-68,-65,-67,-71,-34,51,51,-66,-69,-60,51,-43,-44,-45,-46,51,51,51,51,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,51,51,51,51,51,51,51,-38,51,-41,-61,-64,51,51,-39,-40,51,51,51,]),'COMMAND_ELSE':([5,7,8,9,12,33,52,53,54,106,131,132,144,146,147,],[-12,-6,-7,-8,-11,-4,-5,-9,-10,-13,140,-17,-29,-15,-28,]),']':([13,14,16,21,22,24,55,56,57,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,112,114,115,116,118,126,127,138,],[56,-35,-68,-65,-67,-71,95,-34,-36,-66,-69,-60,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,115,-70,-38,-37,-41,-61,-64,-39,-40,-42,]),',':([14,16,21,22,24,55,56,57,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,99,100,101,112,113,114,115,116,118,126,127,129,134,136,138,141,148,],[-35,-68,-65,-67,-71,96,-34,-36,-66,-69,-60,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,-70,117,-62,-38,117,-37,-41,-61,-64,-39,-40,-63,143,-31,-42,-32,-30,]),')':([14,16,21,22,24,56,58,61,62,63,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,99,100,101,102,104,107,108,111,112,113,115,116,118,124,125,126,127,129,134,136,138,141,148,],[-35,-68,-65,-67,-71,-34,97,-66,-69,-60,112,-43,-44,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-33,-51,-70,116,-62,118,120,122,123,126,-38,127,-41,-61,-64,135,137,-39,-40,-63,142,-31,-42,-32,-30,]),'=':([16,24,66,68,115,130,],[60,-71,103,105,128,139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,27,],[2,69,]),'statement':([2,69,122,123,140,],[3,3,131,132,146,]),'expr':([2,13,15,18,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,59,60,64,65,69,70,71,77,78,96,103,105,117,122,123,128,139,140,],[4,57,58,63,72,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,101,102,4,107,108,111,101,114,119,121,129,4,4,138,145,4,]),'declaration':([2,69,122,123,140,],[6,6,6,6,6,]),'block':([2,69,122,123,135,140,142,],[7,7,7,7,144,7,147,]),'if_block':([2,69,122,123,140,],[8,8,8,8,8,]),'while_loop':([2,69,122,123,140,],[9,9,9,9,9,]),'break':([2,69,122,123,140,],[10,10,10,10,10,]),'return_statement':([2,69,122,123,140,],[11,11,11,11,11,]),'function_def':([2,69,122,123,140,],[12,12,12,12,12,]),'variable':([2,13,15,17,18,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,59,60,64,65,69,70,71,77,78,96,103,105,117,122,123,128,139,140,],[16,16,16,62,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'elements':([13,],[55,]),'all_type':([32,124,143,],[73,133,133,]),'arguments':([64,78,],[100,113,]),'parameters':([124,],[134,]),'parameter':([124,143,],[136,148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','project.py',509),
  ('statements -> statements statement','statements',2,'p_statements','project.py',516),
  ('statements -> <empty>','statements',0,'p_statements','project.py',517),
  ('statement -> expr ;','statement',2,'p_statement','project.py',528),
  ('statement -> declaration ;','statement',2,'p_statement','project.py',529),
  ('statement -> block','statement',1,'p_statement','project.py',530),
  ('statement -> if_block','statement',1,'p_statement','project.py',531),
  ('statement -> while_loop','statement',1,'p_statement','project.py',532),
  ('statement -> break ;','statement',2,'p_statement','project.py',533),
  ('statement -> return_statement ;','statement',2,'p_statement','project.py',534),
  ('statement -> function_def','statement',1,'p_statement','project.py',535),
  ('statement -> ;','statement',1,'p_empty_statement','project.py',541),
  ('block -> OPEN_BLOCK statements CLOSE_BLOCK','block',3,'p_block','project.py',547),
  ('if_block -> COMMAND_IF ( expr ) statement','if_block',5,'p_if_block','project.py',553),
  ('if_block -> COMMAND_IF ( expr ) statement COMMAND_ELSE statement','if_block',7,'p_if_block','project.py',554),
  ('break -> COMMAND_BREAK','break',1,'p_break','project.py',563),
  ('while_loop -> COMMAND_WHILE ( expr ) statement','while_loop',5,'p_while_loop','project.py',570),
  ('declaration -> TYPE ID','declaration',2,'p_declaration','project.py',577),
  ('declaration -> TYPE ID = expr','declaration',4,'p_declaration','project.py',578),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID','declaration',5,'p_declaration_array','project.py',592),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID = expr','declaration',7,'p_declaration_array','project.py',593),
  ('declaration -> STRING_TYPE ID','declaration',2,'p_declaration_string','project.py',608),
  ('declaration -> STRING_TYPE ID = expr','declaration',4,'p_declaration_string','project.py',609),
  ('all_type -> TYPE','all_type',1,'p_all_type','project.py',624),
  ('all_type -> STRING_TYPE','all_type',1,'p_all_type','project.py',625),
  ('all_type -> ARRAY_TYPE ( TYPE )','all_type',4,'p_all_type','project.py',626),
  ('return_statement -> FUNC_RETURN expr','return_statement',2,'p_return_statement','project.py',636),
  ('function_def -> FUNC_DEFINE all_type ID ( parameters ) block','function_def',7,'p_function_def','project.py',647),
  ('function_def -> FUNC_DEFINE all_type ID ( ) block','function_def',6,'p_function_def','project.py',648),
  ('parameters -> parameters , parameter','parameters',3,'p_prameters','project.py',657),
  ('parameters -> parameter','parameters',1,'p_prameters','project.py',658),
  ('parameter -> all_type ID','parameter',2,'p_parameter','project.py',668),
  ('expr -> [ elements ]','expr',3,'p_expr_ar_literal','project.py',684),
  ('expr -> [ ]','expr',2,'p_expr_ar_literal','project.py',685),
  ('expr -> STRING_LITERAL','expr',1,'p_expr_ar_literal','project.py',686),
  ('elements -> expr','elements',1,'p_elements','project.py',717),
  ('elements -> elements , expr','elements',3,'p_elements','project.py',718),
  ('expr -> expr AR_METHOD_SIZE ( )','expr',4,'p_ar_method_size','project.py',732),
  ('expr -> expr AR_METHOD_SIZE ( expr )','expr',5,'p_ar_method_size','project.py',733),
  ('expr -> expr AR_METHOD_RESIZE ( arguments )','expr',5,'p_ar_method_resize','project.py',742),
  ('expr -> variable [ expr ]','expr',4,'p_ar_index','project.py',751),
  ('expr -> variable [ expr ] = expr','expr',6,'p_ar_index','project.py',752),
  ('expr -> expr + expr','expr',3,'p_expr_addition','project.py',764),
  ('expr -> expr - expr','expr',3,'p_expr_subtraction','project.py',770),
  ('expr -> expr * expr','expr',3,'p_expr_multiplication','project.py',776),
  ('expr -> expr / expr','expr',3,'p_expr_division','project.py',783),
  ('expr -> expr ASSIGN_ADD expr','expr',3,'p_expr_comp_addition','project.py',790),
  ('expr -> expr ASSIGN_SUB expr','expr',3,'p_expr_comp_subtraction','project.py',796),
  ('expr -> expr ASSIGN_MULT expr','expr',3,'p_expr_comp_multiplication','project.py',802),
  ('expr -> expr ASSIGN_DIV expr','expr',3,'p_expr_comp_division','project.py',809),
  ('expr -> ( expr )','expr',3,'p_expr_prethesis','project.py',815),
  ('expr -> expr COMP_EQU expr','expr',3,'p_expr_eq','project.py',821),
  ('expr -> expr COMP_NEQU expr','expr',3,'p_expr_neq','project.py',828),
  ('expr -> expr < expr','expr',3,'p_expr_LT','project.py',835),
  ('expr -> expr COMP_LTE expr','expr',3,'p_expr_LE','project.py',841),
  ('expr -> expr > expr','expr',3,'p_expr_GT','project.py',847),
  ('expr -> expr COMP_GTE expr','expr',3,'p_expr_GE','project.py',853),
  ('expr -> expr BOOL_AND expr','expr',3,'p_expr_and','project.py',859),
  ('expr -> expr BOOL_OR expr','expr',3,'p_expr_or','project.py',865),
  ('expr -> ! expr','expr',2,'p_expr_not','project.py',871),
  ('expr -> COMMAND_PRINT ( arguments )','expr',4,'p_expr_print','project.py',878),
  ('arguments -> expr','arguments',1,'p_expr_print_args','project.py',884),
  ('arguments -> arguments , expr','arguments',3,'p_expr_print_args','project.py',885),
  ('expr -> COMMAND_RANDOM ( expr )','expr',4,'p_expr_random','project.py',895),
  ('expr -> VAL_LITERAL','expr',1,'p_expr_simple_val','project.py',902),
  ('expr -> - VAL_LITERAL','expr',2,'p_expr_simple_val','project.py',903),
  ('expr -> CHAR_LITERAL','expr',1,'p_expr_simple_char','project.py',912),
  ('expr -> variable','expr',1,'p_expr_simple_var','project.py',918),
  ('expr -> - variable','expr',2,'p_expr_simple_var','project.py',919),
  ('expr -> variable = expr','expr',3,'p_assignment','project.py',930),
  ('variable -> ID','variable',1,'p_check_ID','project.py',937),
]
