
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=leftBOOL_ORleftBOOL_ANDleft<>COMP_EQUCOMP_NEQUCOMP_LTECOMP_GTEleft+-left*/right!rightAR_METHOD_SIZEAR_METHOD_RESIZETYPE COMMAND_PRINT COMMAND_RANDOM ID VAL_LITERAL CHAR_LITERAL ASSIGN_ADD ASSIGN_SUB ASSIGN_MULT ASSIGN_DIV COMP_EQU COMP_NEQU COMP_LTE COMP_GTE BOOL_AND BOOL_OR WHITESPACE COMMENT OPEN_BLOCK CLOSE_BLOCK COMMAND_IF COMMAND_ELSE COMMAND_WHILE COMMAND_BREAK ARRAY_TYPE STRING_TYPE STRING_LITERAL AR_METHOD_SIZE AR_METHOD_RESIZE FUNC_DEFINE FUNC_RETURN\n    program : statements\n    \n    statements : statements statement\n               |\n    \n    statement : expr ';'\n              | declaration ';'\n              | block\n              | if_block\n              | while_loop\n              | break ';'\n              | return_statement ';'\n              | function_def\n    \n    statement : ';'\n    \n    block : OPEN_BLOCK statements CLOSE_BLOCK\n    \n    if_block : COMMAND_IF '(' expr ')' statement\n             | COMMAND_IF '(' expr ')' statement COMMAND_ELSE statement\n    \n    break : COMMAND_BREAK\n    \n    while_loop : COMMAND_WHILE '(' expr ')' statement\n    \n    declaration : TYPE ID\n                | TYPE ID '=' expr\n    \n    declaration : ARRAY_TYPE '(' TYPE ')' ID\n                | ARRAY_TYPE '(' TYPE ')' ID '=' expr\n    \n    declaration : STRING_TYPE ID\n                | STRING_TYPE ID '=' expr\n    \n    all_type : TYPE\n             | STRING_TYPE\n             | ARRAY_TYPE '(' TYPE ')'\n    \n    return_statement : FUNC_RETURN expr\n    \n    function_def : func_signature statement\n    \n    func_signature : FUNC_DEFINE all_type ID '(' parameters ')'\n                   | FUNC_DEFINE all_type ID '(' ')'\n    \n    parameters : parameters ',' parameter\n               | parameter\n    \n    parameter : all_type ID\n    \n    expr : ID '(' arguments ')'\n    \n    expr : '[' elements ']'\n         | '[' ']'\n         | STRING_LITERAL\n    \n    elements : expr\n             | elements ',' expr\n    \n    expr : expr AR_METHOD_SIZE '(' ')'\n         | expr AR_METHOD_SIZE '(' expr ')'\n    \n    expr : expr AR_METHOD_RESIZE '(' arguments ')'\n    \n    expr : variable '[' expr ']'\n         | variable '[' expr ']' '=' expr\n    \n    expr : expr '+' expr\n    \n    expr : expr '-' expr\n    \n    expr : expr '*' expr\n    \n    expr : expr '/' expr\n    \n    expr : expr ASSIGN_ADD expr\n    \n    expr : expr ASSIGN_SUB expr\n    \n    expr : expr ASSIGN_MULT expr\n    \n    expr : expr ASSIGN_DIV expr\n    \n    expr : '(' expr ')'\n    \n    expr : expr COMP_EQU expr\n    \n    expr : expr COMP_NEQU expr\n    \n    expr : expr '<' expr\n    \n    expr : expr COMP_LTE expr\n    \n    expr : expr '>' expr\n    \n    expr : expr COMP_GTE expr\n    \n    expr : expr BOOL_AND expr\n    \n    expr : expr BOOL_OR expr\n    \n    expr : '!' expr\n    \n    expr : COMMAND_PRINT '(' arguments ')'\n    \n    arguments : expr\n              | arguments ',' expr\n    \n    expr : COMMAND_RANDOM '(' expr ')'\n    \n    expr : VAL_LITERAL\n         | '-' VAL_LITERAL\n    \n    expr : CHAR_LITERAL\n    \n    expr : variable\n         | '-' variable\n    \n    expr : variable '=' expr\n    \n    variable : ID\n    "
    
_lr_action_items = {';':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,27,30,32,34,53,54,55,59,63,64,65,66,69,71,72,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,111,117,119,122,123,124,125,127,128,129,132,133,136,137,138,141,144,146,148,150,151,],[-3,5,-2,34,-12,53,-6,-7,-8,54,55,-11,-73,-37,-70,-67,-69,-3,-16,5,-4,-5,-9,-10,-36,-68,-71,-73,-62,-18,-22,5,-27,-28,-45,-46,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-59,-60,-61,-53,-35,-72,-13,-40,-34,-43,-63,-66,-19,-23,5,5,-41,-42,-20,-14,-17,-30,-44,5,-29,-21,-15,]),'ID':([0,2,3,5,7,8,9,12,14,15,18,19,24,26,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,77,78,79,81,82,103,108,110,111,120,126,128,129,135,137,138,139,141,143,145,146,148,151,],[-3,13,-2,-12,-6,-7,-8,-11,13,13,65,13,69,71,-3,13,13,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,-9,-10,13,13,13,13,13,13,13,13,-28,114,-24,-25,13,13,13,13,13,-13,13,136,13,13,13,-14,-17,147,-30,-26,13,13,-29,-15,]),'[':([0,2,3,5,7,8,9,12,13,14,15,17,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,15,-2,-12,-6,-7,-8,-11,-73,15,15,61,15,-3,15,15,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,-9,-10,15,15,15,15,15,15,15,15,-28,15,15,15,15,15,-13,15,15,15,15,-14,-17,-30,15,15,-29,-15,]),'STRING_LITERAL':([0,2,3,5,7,8,9,12,14,15,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,16,-2,-12,-6,-7,-8,-11,16,16,16,-3,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-5,-9,-10,16,16,16,16,16,16,16,16,-28,16,16,16,16,16,-13,16,16,16,16,-14,-17,-30,16,16,-29,-15,]),'(':([0,2,3,5,7,8,9,12,13,14,15,19,20,21,25,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,80,81,82,103,108,110,111,114,120,128,129,135,137,138,141,145,146,148,151,],[-3,14,-2,-12,-6,-7,-8,-11,56,14,14,14,67,68,70,-3,73,74,14,14,-4,81,82,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-5,-9,-10,14,14,14,14,14,14,14,14,-28,115,14,14,14,14,14,-13,130,14,14,14,14,-14,-17,-30,14,14,-29,-15,]),'!':([0,2,3,5,7,8,9,12,14,15,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,19,-2,-12,-6,-7,-8,-11,19,19,19,-3,19,19,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,-9,-10,19,19,19,19,19,19,19,19,-28,19,19,19,19,19,-13,19,19,19,19,-14,-17,-30,19,19,-29,-15,]),'COMMAND_PRINT':([0,2,3,5,7,8,9,12,14,15,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,20,-2,-12,-6,-7,-8,-11,20,20,20,-3,20,20,-4,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-5,-9,-10,20,20,20,20,20,20,20,20,-28,20,20,20,20,20,-13,20,20,20,20,-14,-17,-30,20,20,-29,-15,]),'COMMAND_RANDOM':([0,2,3,5,7,8,9,12,14,15,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,21,-2,-12,-6,-7,-8,-11,21,21,21,-3,21,21,-4,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-5,-9,-10,21,21,21,21,21,21,21,21,-28,21,21,21,21,21,-13,21,21,21,21,-14,-17,-30,21,21,-29,-15,]),'VAL_LITERAL':([0,2,3,5,7,8,9,12,14,15,18,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,22,-2,-12,-6,-7,-8,-11,22,22,63,22,-3,22,22,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-5,-9,-10,22,22,22,22,22,22,22,22,-28,22,22,22,22,22,-13,22,22,22,22,-14,-17,-30,22,22,-29,-15,]),'-':([0,2,3,4,5,7,8,9,12,13,14,15,16,17,19,22,23,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,72,73,74,75,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,107,108,110,111,112,113,116,117,119,120,121,122,123,124,125,127,128,129,132,133,134,135,137,138,141,144,145,146,148,150,151,],[-3,18,-2,38,-12,-6,-7,-8,-11,-73,18,18,-37,-70,18,-67,-69,-3,18,18,-4,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,-9,-10,18,38,-36,38,18,18,-68,-71,-73,-62,18,18,18,18,18,38,-28,18,18,-45,-46,-47,-48,38,38,38,38,38,38,38,38,38,38,38,38,38,-53,-35,18,38,38,38,18,18,-13,38,38,38,-40,-34,18,38,-43,-63,-66,38,38,18,18,-41,-42,38,18,-14,-17,-30,38,18,18,-29,38,-15,]),'CHAR_LITERAL':([0,2,3,5,7,8,9,12,14,15,19,27,31,32,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,67,68,72,73,74,76,81,82,103,108,110,111,120,128,129,135,137,138,141,145,146,148,151,],[-3,23,-2,-12,-6,-7,-8,-11,23,23,23,-3,23,23,-4,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-5,-9,-10,23,23,23,23,23,23,23,23,-28,23,23,23,23,23,-13,23,23,23,23,-14,-17,-30,23,23,-29,-15,]),'TYPE':([0,2,3,5,7,8,9,12,27,32,33,34,53,54,55,70,72,76,111,115,128,129,130,137,138,141,146,148,149,151,],[-3,24,-2,-12,-6,-7,-8,-11,-3,24,78,-4,-5,-9,-10,109,24,-28,-13,131,24,24,78,-14,-17,-30,24,-29,78,-15,]),'ARRAY_TYPE':([0,2,3,5,7,8,9,12,27,32,33,34,53,54,55,72,76,111,128,129,130,137,138,141,146,148,149,151,],[-3,25,-2,-12,-6,-7,-8,-11,-3,25,80,-4,-5,-9,-10,25,-28,-13,25,25,80,-14,-17,-30,25,-29,80,-15,]),'STRING_TYPE':([0,2,3,5,7,8,9,12,27,32,33,34,53,54,55,72,76,111,128,129,130,137,138,141,146,148,149,151,],[-3,26,-2,-12,-6,-7,-8,-11,-3,26,79,-4,-5,-9,-10,26,-28,-13,26,26,79,-14,-17,-30,26,-29,79,-15,]),'OPEN_BLOCK':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,27,-2,-12,-6,-7,-8,-11,-3,27,-4,-5,-9,-10,27,-28,-13,27,27,-14,-17,-30,27,-29,-15,]),'COMMAND_IF':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,28,-2,-12,-6,-7,-8,-11,-3,28,-4,-5,-9,-10,28,-28,-13,28,28,-14,-17,-30,28,-29,-15,]),'COMMAND_WHILE':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,29,-2,-12,-6,-7,-8,-11,-3,29,-4,-5,-9,-10,29,-28,-13,29,29,-14,-17,-30,29,-29,-15,]),'COMMAND_BREAK':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,30,-2,-12,-6,-7,-8,-11,-3,30,-4,-5,-9,-10,30,-28,-13,30,30,-14,-17,-30,30,-29,-15,]),'FUNC_RETURN':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,31,-2,-12,-6,-7,-8,-11,-3,31,-4,-5,-9,-10,31,-28,-13,31,31,-14,-17,-30,31,-29,-15,]),'FUNC_DEFINE':([0,2,3,5,7,8,9,12,27,32,34,53,54,55,72,76,111,128,129,137,138,141,146,148,151,],[-3,33,-2,-12,-6,-7,-8,-11,-3,33,-4,-5,-9,-10,33,-28,-13,33,33,-14,-17,-30,33,-29,-15,]),'$end':([0,1,2,3,5,7,8,9,12,34,53,54,55,76,111,137,138,151,],[-3,0,-1,-2,-12,-6,-7,-8,-11,-4,-5,-9,-10,-28,-13,-14,-17,-15,]),'CLOSE_BLOCK':([3,5,7,8,9,12,27,34,53,54,55,72,76,111,137,138,151,],[-2,-12,-6,-7,-8,-11,-3,-4,-5,-9,-10,111,-28,-13,-14,-17,-15,]),'AR_METHOD_SIZE':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[35,-73,-37,-70,-67,-69,35,-36,35,-68,-71,-73,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-53,-35,35,35,35,35,35,35,-40,-34,35,-43,-63,-66,35,35,-41,-42,35,35,35,]),'AR_METHOD_RESIZE':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[36,-73,-37,-70,-67,-69,36,-36,36,-68,-71,-73,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-53,-35,36,36,36,36,36,36,-40,-34,36,-43,-63,-66,36,36,-41,-42,36,36,36,]),'+':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[37,-73,-37,-70,-67,-69,37,-36,37,-68,-71,-73,-62,37,-45,-46,-47,-48,37,37,37,37,37,37,37,37,37,37,37,37,37,-53,-35,37,37,37,37,37,37,-40,-34,37,-43,-63,-66,37,37,-41,-42,37,37,37,]),'*':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[39,-73,-37,-70,-67,-69,39,-36,39,-68,-71,-73,-62,39,39,39,-47,-48,39,39,39,39,39,39,39,39,39,39,39,39,39,-53,-35,39,39,39,39,39,39,-40,-34,39,-43,-63,-66,39,39,-41,-42,39,39,39,]),'/':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[40,-73,-37,-70,-67,-69,40,-36,40,-68,-71,-73,-62,40,40,40,-47,-48,40,40,40,40,40,40,40,40,40,40,40,40,40,-53,-35,40,40,40,40,40,40,-40,-34,40,-43,-63,-66,40,40,-41,-42,40,40,40,]),'ASSIGN_ADD':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[41,-73,-37,-70,-67,-69,41,-36,41,-68,-71,-73,-62,41,-45,-46,-47,-48,41,41,41,41,-54,-55,-56,-57,-58,-59,-60,-61,41,-53,-35,41,-72,41,41,41,41,-40,-34,41,-43,-63,-66,41,41,-41,-42,41,-44,41,]),'ASSIGN_SUB':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[42,-73,-37,-70,-67,-69,42,-36,42,-68,-71,-73,-62,42,-45,-46,-47,-48,42,42,42,42,-54,-55,-56,-57,-58,-59,-60,-61,42,-53,-35,42,-72,42,42,42,42,-40,-34,42,-43,-63,-66,42,42,-41,-42,42,-44,42,]),'ASSIGN_MULT':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[43,-73,-37,-70,-67,-69,43,-36,43,-68,-71,-73,-62,43,-45,-46,-47,-48,43,43,43,43,-54,-55,-56,-57,-58,-59,-60,-61,43,-53,-35,43,-72,43,43,43,43,-40,-34,43,-43,-63,-66,43,43,-41,-42,43,-44,43,]),'ASSIGN_DIV':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[44,-73,-37,-70,-67,-69,44,-36,44,-68,-71,-73,-62,44,-45,-46,-47,-48,44,44,44,44,-54,-55,-56,-57,-58,-59,-60,-61,44,-53,-35,44,-72,44,44,44,44,-40,-34,44,-43,-63,-66,44,44,-41,-42,44,-44,44,]),'COMP_EQU':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[45,-73,-37,-70,-67,-69,45,-36,45,-68,-71,-73,-62,45,-45,-46,-47,-48,45,45,45,45,-54,-55,-56,-57,-58,-59,45,45,45,-53,-35,45,45,45,45,45,45,-40,-34,45,-43,-63,-66,45,45,-41,-42,45,45,45,]),'COMP_NEQU':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[46,-73,-37,-70,-67,-69,46,-36,46,-68,-71,-73,-62,46,-45,-46,-47,-48,46,46,46,46,-54,-55,-56,-57,-58,-59,46,46,46,-53,-35,46,46,46,46,46,46,-40,-34,46,-43,-63,-66,46,46,-41,-42,46,46,46,]),'<':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[47,-73,-37,-70,-67,-69,47,-36,47,-68,-71,-73,-62,47,-45,-46,-47,-48,47,47,47,47,-54,-55,-56,-57,-58,-59,47,47,47,-53,-35,47,47,47,47,47,47,-40,-34,47,-43,-63,-66,47,47,-41,-42,47,47,47,]),'COMP_LTE':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[48,-73,-37,-70,-67,-69,48,-36,48,-68,-71,-73,-62,48,-45,-46,-47,-48,48,48,48,48,-54,-55,-56,-57,-58,-59,48,48,48,-53,-35,48,48,48,48,48,48,-40,-34,48,-43,-63,-66,48,48,-41,-42,48,48,48,]),'>':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[49,-73,-37,-70,-67,-69,49,-36,49,-68,-71,-73,-62,49,-45,-46,-47,-48,49,49,49,49,-54,-55,-56,-57,-58,-59,49,49,49,-53,-35,49,49,49,49,49,49,-40,-34,49,-43,-63,-66,49,49,-41,-42,49,49,49,]),'COMP_GTE':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[50,-73,-37,-70,-67,-69,50,-36,50,-68,-71,-73,-62,50,-45,-46,-47,-48,50,50,50,50,-54,-55,-56,-57,-58,-59,50,50,50,-53,-35,50,50,50,50,50,50,-40,-34,50,-43,-63,-66,50,50,-41,-42,50,50,50,]),'BOOL_AND':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[51,-73,-37,-70,-67,-69,51,-36,51,-68,-71,-73,-62,51,-45,-46,-47,-48,51,51,51,51,-54,-55,-56,-57,-58,-59,-60,51,51,-53,-35,51,51,51,51,51,51,-40,-34,51,-43,-63,-66,51,51,-41,-42,51,51,51,]),'BOOL_OR':([4,13,16,17,22,23,57,59,60,63,64,65,66,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,107,112,113,116,117,119,121,122,123,124,125,127,132,133,134,144,150,],[52,-73,-37,-70,-67,-69,52,-36,52,-68,-71,-73,-62,52,-45,-46,-47,-48,52,52,52,52,-54,-55,-56,-57,-58,-59,-60,-61,52,-53,-35,52,52,52,52,52,52,-40,-34,52,-43,-63,-66,52,52,-41,-42,52,52,52,]),'COMMAND_ELSE':([5,7,8,9,12,34,53,54,55,76,111,137,138,151,],[-12,-6,-7,-8,-11,-4,-5,-9,-10,-28,-13,146,-17,-15,]),'=':([13,17,69,71,122,136,],[-73,62,108,110,135,145,]),')':([13,16,17,22,23,57,59,63,64,65,66,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,109,112,113,116,117,118,119,122,123,124,130,131,132,133,134,140,142,144,147,152,],[-73,-37,-70,-67,-69,101,-36,-68,-71,-73,-62,117,-45,-46,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-59,-60,-61,119,-64,-53,-35,-72,123,124,126,128,129,132,-40,133,-34,-43,-63,-66,141,143,-41,-42,-65,148,-32,-44,-33,-31,]),']':([13,15,16,17,22,23,58,59,60,63,64,65,66,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,105,117,119,121,122,123,124,132,133,144,],[-73,59,-37,-70,-67,-69,102,-36,-38,-68,-71,-73,-62,-45,-46,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-59,-60,-61,-53,-35,122,-72,-40,-34,-39,-43,-63,-66,-41,-42,-44,]),',':([13,16,17,22,23,58,59,60,63,64,65,66,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,117,118,119,121,122,123,124,132,133,134,140,142,144,147,152,],[-73,-37,-70,-67,-69,103,-36,-38,-68,-71,-73,-62,-45,-46,-47,-48,-49,-50,-51,-52,-54,-55,-56,-57,-58,-59,-60,-61,120,-64,-53,-35,-72,120,-40,120,-34,-39,-43,-63,-66,-41,-42,-65,149,-32,-44,-33,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,27,],[2,72,]),'statement':([2,32,72,128,129,146,],[3,76,3,137,138,151,]),'expr':([2,14,15,19,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,61,62,67,68,72,73,74,81,82,103,108,110,120,128,129,135,145,146,],[4,57,60,66,75,4,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,104,105,100,107,4,112,113,116,100,121,125,127,134,4,4,144,150,4,]),'declaration':([2,32,72,128,129,146,],[6,6,6,6,6,6,]),'block':([2,32,72,128,129,146,],[7,7,7,7,7,7,]),'if_block':([2,32,72,128,129,146,],[8,8,8,8,8,8,]),'while_loop':([2,32,72,128,129,146,],[9,9,9,9,9,9,]),'break':([2,32,72,128,129,146,],[10,10,10,10,10,10,]),'return_statement':([2,32,72,128,129,146,],[11,11,11,11,11,11,]),'function_def':([2,32,72,128,129,146,],[12,12,12,12,12,12,]),'variable':([2,14,15,18,19,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,61,62,67,68,72,73,74,81,82,103,108,110,120,128,129,135,145,146,],[17,17,17,64,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'func_signature':([2,32,72,128,129,146,],[32,32,32,32,32,32,]),'elements':([15,],[58,]),'all_type':([33,130,149,],[77,139,139,]),'arguments':([56,67,82,],[99,106,118,]),'parameters':([130,],[140,]),'parameter':([130,149,],[142,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','project.py',566),
  ('statements -> statements statement','statements',2,'p_statements','project.py',573),
  ('statements -> <empty>','statements',0,'p_statements','project.py',574),
  ('statement -> expr ;','statement',2,'p_statement','project.py',585),
  ('statement -> declaration ;','statement',2,'p_statement','project.py',586),
  ('statement -> block','statement',1,'p_statement','project.py',587),
  ('statement -> if_block','statement',1,'p_statement','project.py',588),
  ('statement -> while_loop','statement',1,'p_statement','project.py',589),
  ('statement -> break ;','statement',2,'p_statement','project.py',590),
  ('statement -> return_statement ;','statement',2,'p_statement','project.py',591),
  ('statement -> function_def','statement',1,'p_statement','project.py',592),
  ('statement -> ;','statement',1,'p_empty_statement','project.py',598),
  ('block -> OPEN_BLOCK statements CLOSE_BLOCK','block',3,'p_block','project.py',604),
  ('if_block -> COMMAND_IF ( expr ) statement','if_block',5,'p_if_block','project.py',610),
  ('if_block -> COMMAND_IF ( expr ) statement COMMAND_ELSE statement','if_block',7,'p_if_block','project.py',611),
  ('break -> COMMAND_BREAK','break',1,'p_break','project.py',620),
  ('while_loop -> COMMAND_WHILE ( expr ) statement','while_loop',5,'p_while_loop','project.py',627),
  ('declaration -> TYPE ID','declaration',2,'p_declaration','project.py',634),
  ('declaration -> TYPE ID = expr','declaration',4,'p_declaration','project.py',635),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID','declaration',5,'p_declaration_array','project.py',649),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID = expr','declaration',7,'p_declaration_array','project.py',650),
  ('declaration -> STRING_TYPE ID','declaration',2,'p_declaration_string','project.py',665),
  ('declaration -> STRING_TYPE ID = expr','declaration',4,'p_declaration_string','project.py',666),
  ('all_type -> TYPE','all_type',1,'p_all_type','project.py',682),
  ('all_type -> STRING_TYPE','all_type',1,'p_all_type','project.py',683),
  ('all_type -> ARRAY_TYPE ( TYPE )','all_type',4,'p_all_type','project.py',684),
  ('return_statement -> FUNC_RETURN expr','return_statement',2,'p_return_statement','project.py',694),
  ('function_def -> func_signature statement','function_def',2,'p_function_def','project.py',711),
  ('func_signature -> FUNC_DEFINE all_type ID ( parameters )','func_signature',6,'p_func_signature','project.py',727),
  ('func_signature -> FUNC_DEFINE all_type ID ( )','func_signature',5,'p_func_signature','project.py',728),
  ('parameters -> parameters , parameter','parameters',3,'p_prameters','project.py',755),
  ('parameters -> parameter','parameters',1,'p_prameters','project.py',756),
  ('parameter -> all_type ID','parameter',2,'p_parameter','project.py',766),
  ('expr -> ID ( arguments )','expr',4,'p_expr_function_call','project.py',775),
  ('expr -> [ elements ]','expr',3,'p_expr_ar_literal','project.py',804),
  ('expr -> [ ]','expr',2,'p_expr_ar_literal','project.py',805),
  ('expr -> STRING_LITERAL','expr',1,'p_expr_ar_literal','project.py',806),
  ('elements -> expr','elements',1,'p_elements','project.py',837),
  ('elements -> elements , expr','elements',3,'p_elements','project.py',838),
  ('expr -> expr AR_METHOD_SIZE ( )','expr',4,'p_ar_method_size','project.py',852),
  ('expr -> expr AR_METHOD_SIZE ( expr )','expr',5,'p_ar_method_size','project.py',853),
  ('expr -> expr AR_METHOD_RESIZE ( arguments )','expr',5,'p_ar_method_resize','project.py',862),
  ('expr -> variable [ expr ]','expr',4,'p_ar_index','project.py',871),
  ('expr -> variable [ expr ] = expr','expr',6,'p_ar_index','project.py',872),
  ('expr -> expr + expr','expr',3,'p_expr_addition','project.py',884),
  ('expr -> expr - expr','expr',3,'p_expr_subtraction','project.py',890),
  ('expr -> expr * expr','expr',3,'p_expr_multiplication','project.py',896),
  ('expr -> expr / expr','expr',3,'p_expr_division','project.py',903),
  ('expr -> expr ASSIGN_ADD expr','expr',3,'p_expr_comp_addition','project.py',910),
  ('expr -> expr ASSIGN_SUB expr','expr',3,'p_expr_comp_subtraction','project.py',916),
  ('expr -> expr ASSIGN_MULT expr','expr',3,'p_expr_comp_multiplication','project.py',922),
  ('expr -> expr ASSIGN_DIV expr','expr',3,'p_expr_comp_division','project.py',929),
  ('expr -> ( expr )','expr',3,'p_expr_prethesis','project.py',935),
  ('expr -> expr COMP_EQU expr','expr',3,'p_expr_eq','project.py',941),
  ('expr -> expr COMP_NEQU expr','expr',3,'p_expr_neq','project.py',948),
  ('expr -> expr < expr','expr',3,'p_expr_LT','project.py',955),
  ('expr -> expr COMP_LTE expr','expr',3,'p_expr_LE','project.py',961),
  ('expr -> expr > expr','expr',3,'p_expr_GT','project.py',967),
  ('expr -> expr COMP_GTE expr','expr',3,'p_expr_GE','project.py',973),
  ('expr -> expr BOOL_AND expr','expr',3,'p_expr_and','project.py',979),
  ('expr -> expr BOOL_OR expr','expr',3,'p_expr_or','project.py',985),
  ('expr -> ! expr','expr',2,'p_expr_not','project.py',991),
  ('expr -> COMMAND_PRINT ( arguments )','expr',4,'p_expr_print','project.py',998),
  ('arguments -> expr','arguments',1,'p_expr_print_args','project.py',1004),
  ('arguments -> arguments , expr','arguments',3,'p_expr_print_args','project.py',1005),
  ('expr -> COMMAND_RANDOM ( expr )','expr',4,'p_expr_random','project.py',1015),
  ('expr -> VAL_LITERAL','expr',1,'p_expr_simple_val','project.py',1022),
  ('expr -> - VAL_LITERAL','expr',2,'p_expr_simple_val','project.py',1023),
  ('expr -> CHAR_LITERAL','expr',1,'p_expr_simple_char','project.py',1032),
  ('expr -> variable','expr',1,'p_expr_simple_var','project.py',1038),
  ('expr -> - variable','expr',2,'p_expr_simple_var','project.py',1039),
  ('expr -> variable = expr','expr',3,'p_assignment','project.py',1050),
  ('variable -> ID','variable',1,'p_check_ID','project.py',1057),
]
