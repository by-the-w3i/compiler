
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3F3CC927ECC00427EB94DD7F888D353C'
    
_lr_action_items = {'CLOSE_BLOCK':([4,7,13,15,16,23,31,43,49,51,76,87,88,90,],[-6,-10,-7,-3,-2,-8,-4,-9,76,-5,-11,-12,-15,-13,]),'COMMAND_ELSE':([4,7,13,23,31,43,51,76,87,88,90,],[-6,-10,-7,-8,-4,-9,-5,-11,89,-15,-13,]),'TYPE':([0,1,4,7,13,15,16,23,31,43,49,51,76,83,85,87,88,89,90,],[-3,5,-6,-10,-7,-3,-2,-8,-4,-9,5,-5,-11,5,5,-12,-15,5,-13,]),'COMP_EQU':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,42,-43,-40,-42,-44,-41,-35,42,42,-20,-21,42,-32,42,-19,-29,-30,-18,42,-31,42,42,-28,-27,42,42,42,42,-26,42,42,-36,-39,42,]),'ID':([0,1,4,5,7,13,14,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,6,-6,25,-10,-7,6,-3,-2,6,6,-8,6,6,6,6,6,-4,6,6,6,6,6,6,6,6,6,6,6,-9,6,6,6,6,6,-5,6,6,-11,6,6,6,-12,-15,6,-13,]),'BOOL_AND':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,29,-43,-40,-42,-44,-41,-35,29,29,-20,-21,-33,-32,29,-19,-29,-30,-18,29,-31,29,29,-28,-27,29,29,29,29,-26,29,29,-36,-39,29,]),')':([6,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,84,86,],[-46,-43,-40,-42,-44,-41,-35,78,-25,-20,-21,-33,-32,-34,-19,-29,-30,-18,-24,-31,-23,-22,-28,-27,-37,82,-45,83,84,-26,85,-36,-39,-38,]),';':([0,1,3,4,6,7,8,9,11,13,15,16,18,21,23,24,25,31,43,47,48,49,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,76,78,80,82,83,84,85,87,88,89,90,],[-3,7,-14,-6,-46,-10,31,43,-43,-7,-3,-2,51,-40,-8,-42,-16,-4,-9,-44,-41,7,-5,-35,-25,-20,-21,-33,-32,-34,-19,-29,-30,-18,-24,-31,-23,-22,-28,-27,-45,-11,-26,-17,-36,7,-39,7,-12,-15,7,-13,]),'OPEN_BLOCK':([0,1,4,7,13,15,16,23,31,43,49,51,76,83,85,87,88,89,90,],[-3,15,-6,-10,-7,-3,-2,-8,-4,-9,15,-5,-11,15,15,-12,-15,15,-13,]),'BOOL_OR':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,32,-43,-40,-42,-44,-41,-35,32,32,-20,-21,-33,-32,-34,-19,-29,-30,-18,32,-31,32,32,-28,-27,32,32,32,32,-26,32,32,-36,-39,32,]),'ASSIGN_MULT':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,37,-43,-40,-42,-44,-41,-35,37,37,-20,-21,-33,-32,-34,-19,-29,-30,-18,37,-31,37,37,-28,-27,37,-45,37,37,-26,37,37,-36,-39,37,]),'COMP_LTE':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,35,-43,-40,-42,-44,-41,-35,35,35,-20,-21,35,-32,35,-19,-29,-30,-18,35,-31,35,35,-28,-27,35,35,35,35,-26,35,35,-36,-39,35,]),'+':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,36,-43,-40,-42,-44,-41,-35,36,36,-20,-21,36,36,36,-19,36,36,-18,36,36,36,36,36,36,36,36,36,36,-26,36,36,-36,-39,36,]),'COMMAND_IF':([0,1,4,7,13,15,16,23,31,43,49,51,76,83,85,87,88,89,90,],[-3,12,-6,-10,-7,-3,-2,-8,-4,-9,12,-5,-11,12,12,-12,-15,12,-13,]),'-':([0,1,4,6,7,8,11,13,15,16,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,],[-3,14,-6,-46,-10,33,-43,-7,-3,-2,14,14,-40,-8,-42,14,14,14,14,14,-4,14,14,14,14,14,14,14,14,14,14,14,-9,14,14,14,-44,-41,14,14,-5,-35,33,14,14,33,-20,-21,33,33,33,-19,33,33,-18,33,33,33,33,33,33,33,33,33,-11,33,-26,33,33,14,-36,14,-39,14,33,-12,-15,14,-13,]),'/':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,28,-43,-40,-42,-44,-41,-35,28,28,-20,-21,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,28,28,-36,-39,28,]),'$end':([0,1,2,4,7,13,16,23,31,43,51,76,87,88,90,],[-3,-1,0,-6,-10,-7,-2,-8,-4,-9,-5,-11,-12,-15,-13,]),'COMP_GTE':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,30,-43,-40,-42,-44,-41,-35,30,30,-20,-21,30,-32,30,-19,-29,-30,-18,30,-31,30,30,-28,-27,30,30,30,30,-26,30,30,-36,-39,30,]),'ASSIGN_DIV':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,26,-43,-40,-42,-44,-41,-35,26,26,-20,-21,-33,-32,-34,-19,-29,-30,-18,26,-31,26,26,-28,-27,26,-45,26,26,-26,26,26,-36,-39,26,]),'*':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,27,-43,-40,-42,-44,-41,-35,27,27,-20,-21,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,27,27,-36,-39,27,]),'COMMAND_RANDOM':([0,1,4,7,13,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,17,-6,-10,-7,-3,-2,17,17,-8,17,17,17,17,17,-4,17,17,17,17,17,17,17,17,17,17,17,-9,17,17,17,17,17,-5,17,17,-11,17,17,17,-12,-15,17,-13,]),'=':([6,11,25,],[-46,45,55,]),'(':([0,1,4,7,10,12,13,15,16,17,19,20,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,20,-6,-10,44,46,-7,-3,-2,50,20,20,54,-8,20,20,20,20,20,-4,20,20,20,20,20,20,20,20,20,20,20,-9,20,20,20,20,20,-5,20,20,-11,20,20,20,-12,-15,20,-13,]),'VAL_LITERAL':([0,1,4,7,13,14,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,21,-6,-10,-7,48,-3,-2,21,21,-8,21,21,21,21,21,-4,21,21,21,21,21,21,21,21,21,21,21,-9,21,21,21,21,21,-5,21,21,-11,21,21,21,-12,-15,21,-13,]),'COMMAND_WHILE':([0,1,4,7,13,15,16,23,31,43,49,51,76,83,85,87,88,89,90,],[-3,22,-6,-10,-7,-3,-2,-8,-4,-9,22,-5,-11,22,22,-12,-15,22,-13,]),'<':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,34,-43,-40,-42,-44,-41,-35,34,34,-20,-21,34,-32,34,-19,-29,-30,-18,34,-31,34,34,-28,-27,34,34,34,34,-26,34,34,-36,-39,34,]),'COMMAND_PRINT':([0,1,4,7,13,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,10,-6,-10,-7,-3,-2,10,10,-8,10,10,10,10,10,-4,10,10,10,10,10,10,10,10,10,10,10,-9,10,10,10,10,10,-5,10,10,-11,10,10,10,-12,-15,10,-13,]),'CHAR_LITERAL':([0,1,4,7,13,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,24,-6,-10,-7,-3,-2,24,24,-8,24,24,24,24,24,-4,24,24,24,24,24,24,24,24,24,24,24,-9,24,24,24,24,24,-5,24,24,-11,24,24,24,-12,-15,24,-13,]),'COMMAND_BREAK':([0,1,4,7,13,15,16,23,31,43,49,51,76,83,85,87,88,89,90,],[-3,3,-6,-10,-7,-3,-2,-8,-4,-9,3,-5,-11,3,3,-12,-15,3,-13,]),',':([6,11,21,24,47,48,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,82,84,86,],[-46,-43,-40,-42,-44,-41,-35,-25,-20,-21,-33,-32,-34,-19,-29,-30,-18,-24,-31,-23,-22,-28,-27,-37,81,-45,-26,-36,-39,-38,]),'>':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,38,-43,-40,-42,-44,-41,-35,38,38,-20,-21,38,-32,38,-19,-29,-30,-18,38,-31,38,38,-28,-27,38,38,38,38,-26,38,38,-36,-39,38,]),'!':([0,1,4,7,13,15,16,19,20,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,54,55,76,81,83,85,87,88,89,90,],[-3,19,-6,-10,-7,-3,-2,19,19,-8,19,19,19,19,19,-4,19,19,19,19,19,19,19,19,19,19,19,-9,19,19,19,19,19,-5,19,19,-11,19,19,19,-12,-15,19,-13,]),'ASSIGN_ADD':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,40,-43,-40,-42,-44,-41,-35,40,40,-20,-21,-33,-32,-34,-19,-29,-30,-18,40,-31,40,40,-28,-27,40,-45,40,40,-26,40,40,-36,-39,40,]),'ASSIGN_SUB':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,39,-43,-40,-42,-44,-41,-35,39,39,-20,-21,-33,-32,-34,-19,-29,-30,-18,39,-31,39,39,-28,-27,39,-45,39,39,-26,39,39,-36,-39,39,]),'COMP_NEQU':([6,8,11,21,24,47,48,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,82,84,86,],[-46,41,-43,-40,-42,-44,-41,-35,41,41,-20,-21,41,-32,41,-19,-29,-30,-18,41,-31,41,41,-28,-27,41,41,41,41,-26,41,41,-36,-39,41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,15,],[1,49,]),'break':([1,49,83,85,89,],[9,9,9,9,9,]),'block':([1,49,83,85,89,],[4,4,4,4,4,]),'while_loop':([1,49,83,85,89,],[23,23,23,23,23,]),'arguments':([44,],[73,]),'program':([0,],[2,]),'if_block':([1,49,83,85,89,],[13,13,13,13,13,]),'variable':([1,14,19,20,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,44,45,46,49,50,54,55,81,83,85,89,],[11,47,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaration':([1,49,83,85,89,],[18,18,18,18,18,]),'expr':([1,19,20,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,44,45,46,49,50,54,55,81,83,85,89,],[8,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,8,77,79,80,86,8,8,8,]),'statement':([1,49,83,85,89,],[16,16,87,88,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','project.py',368),
  ('statements -> statements statement','statements',2,'p_statements','project.py',375),
  ('statements -> <empty>','statements',0,'p_statements','project.py',376),
  ('statement -> expr ;','statement',2,'p_statement','project.py',387),
  ('statement -> declaration ;','statement',2,'p_statement','project.py',388),
  ('statement -> block','statement',1,'p_statement','project.py',389),
  ('statement -> if_block','statement',1,'p_statement','project.py',390),
  ('statement -> while_loop','statement',1,'p_statement','project.py',391),
  ('statement -> break ;','statement',2,'p_statement','project.py',392),
  ('statement -> ;','statement',1,'p_empty_statement','project.py',398),
  ('block -> OPEN_BLOCK statements CLOSE_BLOCK','block',3,'p_block','project.py',404),
  ('if_block -> COMMAND_IF ( expr ) statement','if_block',5,'p_if_block','project.py',410),
  ('if_block -> COMMAND_IF ( expr ) statement COMMAND_ELSE statement','if_block',7,'p_if_block','project.py',411),
  ('break -> COMMAND_BREAK','break',1,'p_break','project.py',420),
  ('while_loop -> COMMAND_WHILE ( expr ) statement','while_loop',5,'p_while_loop','project.py',427),
  ('declaration -> TYPE ID','declaration',2,'p_declaration','project.py',434),
  ('declaration -> TYPE ID = expr','declaration',4,'p_declaration','project.py',435),
  ('expr -> expr + expr','expr',3,'p_expr_addition','project.py',450),
  ('expr -> expr - expr','expr',3,'p_expr_subtraction','project.py',456),
  ('expr -> expr * expr','expr',3,'p_expr_multiplication','project.py',462),
  ('expr -> expr / expr','expr',3,'p_expr_division','project.py',469),
  ('expr -> expr ASSIGN_ADD expr','expr',3,'p_expr_comp_addition','project.py',476),
  ('expr -> expr ASSIGN_SUB expr','expr',3,'p_expr_comp_subtraction','project.py',482),
  ('expr -> expr ASSIGN_MULT expr','expr',3,'p_expr_comp_multiplication','project.py',488),
  ('expr -> expr ASSIGN_DIV expr','expr',3,'p_expr_comp_division','project.py',495),
  ('expr -> ( expr )','expr',3,'p_expr_prethesis','project.py',501),
  ('expr -> expr COMP_EQU expr','expr',3,'p_expr_eq','project.py',507),
  ('expr -> expr COMP_NEQU expr','expr',3,'p_expr_neq','project.py',514),
  ('expr -> expr < expr','expr',3,'p_expr_LT','project.py',521),
  ('expr -> expr COMP_LTE expr','expr',3,'p_expr_LE','project.py',527),
  ('expr -> expr > expr','expr',3,'p_expr_GT','project.py',533),
  ('expr -> expr COMP_GTE expr','expr',3,'p_expr_GE','project.py',539),
  ('expr -> expr BOOL_AND expr','expr',3,'p_expr_and','project.py',545),
  ('expr -> expr BOOL_OR expr','expr',3,'p_expr_or','project.py',551),
  ('expr -> ! expr','expr',2,'p_expr_not','project.py',557),
  ('expr -> COMMAND_PRINT ( arguments )','expr',4,'p_expr_print','project.py',564),
  ('arguments -> expr','arguments',1,'p_expr_print_args','project.py',570),
  ('arguments -> arguments , expr','arguments',3,'p_expr_print_args','project.py',571),
  ('expr -> COMMAND_RANDOM ( expr )','expr',4,'p_expr_random','project.py',581),
  ('expr -> VAL_LITERAL','expr',1,'p_expr_simple_val','project.py',588),
  ('expr -> - VAL_LITERAL','expr',2,'p_expr_simple_val','project.py',589),
  ('expr -> CHAR_LITERAL','expr',1,'p_expr_simple_char','project.py',598),
  ('expr -> variable','expr',1,'p_expr_simple_var','project.py',604),
  ('expr -> - variable','expr',2,'p_expr_simple_var','project.py',605),
  ('expr -> variable = expr','expr',3,'p_assignment','project.py',615),
  ('variable -> ID','variable',1,'p_check_ID','project.py',622),
]
