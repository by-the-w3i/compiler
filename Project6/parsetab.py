
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=leftBOOL_ORleftBOOL_ANDleft<>COMP_EQUCOMP_NEQUCOMP_LTECOMP_GTEleft+-left*/right!rightAR_METHOD_SIZEAR_METHOD_RESIZETYPE COMMAND_PRINT COMMAND_RANDOM ID VAL_LITERAL CHAR_LITERAL ASSIGN_ADD ASSIGN_SUB ASSIGN_MULT ASSIGN_DIV COMP_EQU COMP_NEQU COMP_LTE COMP_GTE BOOL_AND BOOL_OR WHITESPACE COMMENT OPEN_BLOCK CLOSE_BLOCK COMMAND_IF COMMAND_ELSE COMMAND_WHILE COMMAND_BREAK ARRAY_TYPE STRING_TYPE STRING_LITERAL AR_METHOD_SIZE AR_METHOD_RESIZE\n    program : statements\n    \n    statements : statements statement\n               |\n    \n    statement : expr ';'\n              | declaration ';'\n              | block\n              | if_block\n              | while_loop\n              | break ';'\n    \n    statement : ';'\n    \n    block : OPEN_BLOCK statements CLOSE_BLOCK\n    \n    if_block : COMMAND_IF '(' expr ')' statement\n             | COMMAND_IF '(' expr ')' statement COMMAND_ELSE statement\n    \n    break : COMMAND_BREAK\n    \n    while_loop : COMMAND_WHILE '(' expr ')' statement\n    \n    declaration : TYPE ID\n                | TYPE ID '=' expr\n    \n    declaration : ARRAY_TYPE '(' TYPE ')' ID\n                | ARRAY_TYPE '(' TYPE ')' ID '=' expr\n    \n    declaration : STRING_TYPE ID\n                | STRING_TYPE ID '=' expr\n    \n    expr : '[' elements ']'\n         | '[' ']'\n         | STRING_LITERAL\n    \n    elements : expr\n             | elements ',' expr\n    \n    expr : expr AR_METHOD_SIZE '(' ')'\n         | expr AR_METHOD_SIZE '(' expr ')'\n    \n    expr : expr AR_METHOD_RESIZE '(' arguments ')'\n    \n    expr : variable '[' expr ']'\n         | variable '[' expr ']' '=' expr\n    \n    expr : expr '+' expr\n    \n    expr : expr '-' expr\n    \n    expr : expr '*' expr\n    \n    expr : expr '/' expr\n    \n    expr : expr ASSIGN_ADD expr\n    \n    expr : expr ASSIGN_SUB expr\n    \n    expr : expr ASSIGN_MULT expr\n    \n    expr : expr ASSIGN_DIV expr\n    \n    expr : '(' expr ')'\n    \n    expr : expr COMP_EQU expr\n    \n    expr : expr COMP_NEQU expr\n    \n    expr : expr '<' expr\n    \n    expr : expr COMP_LTE expr\n    \n    expr : expr '>' expr\n    \n    expr : expr COMP_GTE expr\n    \n    expr : expr BOOL_AND expr\n    \n    expr : expr BOOL_OR expr\n    \n    expr : '!' expr\n    \n    expr : COMMAND_PRINT '(' arguments ')'\n    \n    arguments : expr\n              | arguments ',' expr\n    \n    expr : COMMAND_RANDOM '(' expr ')'\n    \n    expr : VAL_LITERAL\n         | '-' VAL_LITERAL\n    \n    expr : CHAR_LITERAL\n    \n    expr : variable\n         | '-' variable\n    \n    expr : variable '=' expr\n    \n    variable : ID\n    "
    
_lr_action_items = {';':([0,2,3,4,5,6,7,8,9,10,12,14,19,20,22,25,28,29,48,49,51,56,57,58,61,63,64,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,96,100,103,104,106,107,109,110,111,112,113,116,117,118,119,121,122,123,],[-3,5,-2,29,-10,48,-6,-7,-8,49,-24,-57,-54,-56,-60,-3,-14,-4,-5,-9,-23,-55,-58,-49,-16,-20,5,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,-59,-11,-27,-30,-50,-53,-17,-21,5,5,-28,-29,-18,-12,-15,-31,5,-19,-13,]),'[':([0,2,3,5,7,8,9,11,13,14,16,22,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,11,-2,-10,-6,-7,-8,11,11,54,11,-60,-3,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-5,-9,11,11,11,11,11,11,11,11,11,11,11,11,-11,11,11,11,11,-12,-15,11,11,-13,]),'STRING_LITERAL':([0,2,3,5,7,8,9,11,13,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,12,-2,-10,-6,-7,-8,12,12,12,-3,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-5,-9,12,12,12,12,12,12,12,12,12,12,12,12,-11,12,12,12,12,-12,-15,12,12,-13,]),'(':([0,2,3,5,7,8,9,11,13,16,17,18,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,13,-2,-10,-6,-7,-8,13,13,13,59,60,62,-3,65,66,-4,67,68,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,-9,13,13,13,13,13,13,13,13,13,13,13,13,-11,13,13,13,13,-12,-15,13,13,-13,]),'!':([0,2,3,5,7,8,9,11,13,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,16,-2,-10,-6,-7,-8,16,16,16,-3,-4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-5,-9,16,16,16,16,16,16,16,16,16,16,16,16,-11,16,16,16,16,-12,-15,16,16,-13,]),'COMMAND_PRINT':([0,2,3,5,7,8,9,11,13,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,17,-2,-10,-6,-7,-8,17,17,17,-3,-4,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-5,-9,17,17,17,17,17,17,17,17,17,17,17,17,-11,17,17,17,17,-12,-15,17,17,-13,]),'COMMAND_RANDOM':([0,2,3,5,7,8,9,11,13,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,18,-2,-10,-6,-7,-8,18,18,18,-3,-4,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,-9,18,18,18,18,18,18,18,18,18,18,18,18,-11,18,18,18,18,-12,-15,18,18,-13,]),'VAL_LITERAL':([0,2,3,5,7,8,9,11,13,15,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,19,-2,-10,-6,-7,-8,19,19,56,19,-3,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,-9,19,19,19,19,19,19,19,19,19,19,19,19,-11,19,19,19,19,-12,-15,19,19,-13,]),'-':([0,2,3,4,5,7,8,9,11,12,13,14,16,19,20,22,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,],[-3,15,-2,33,-10,-6,-7,-8,15,-24,15,-57,15,-54,-56,-60,-3,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,-9,-23,33,33,15,15,-55,-58,-49,15,15,15,15,15,15,15,-32,-33,-34,-35,33,33,33,33,33,33,33,33,33,33,33,33,-22,15,-40,33,33,33,33,15,15,-11,33,33,33,-27,33,-30,-50,15,-53,33,33,15,15,-28,-29,15,33,-12,-15,33,15,15,33,-13,]),'CHAR_LITERAL':([0,2,3,5,7,8,9,11,13,16,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,110,111,114,117,118,120,121,123,],[-3,20,-2,-10,-6,-7,-8,20,20,20,-3,-4,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-5,-9,20,20,20,20,20,20,20,20,20,20,20,20,-11,20,20,20,20,-12,-15,20,20,-13,]),'TYPE':([0,2,3,5,7,8,9,25,29,48,49,62,64,96,110,111,117,118,121,123,],[-3,21,-2,-10,-6,-7,-8,-3,-4,-5,-9,94,21,-11,21,21,-12,-15,21,-13,]),'ARRAY_TYPE':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,23,-2,-10,-6,-7,-8,-3,-4,-5,-9,23,-11,23,23,-12,-15,23,-13,]),'STRING_TYPE':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,24,-2,-10,-6,-7,-8,-3,-4,-5,-9,24,-11,24,24,-12,-15,24,-13,]),'OPEN_BLOCK':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,25,-2,-10,-6,-7,-8,-3,-4,-5,-9,25,-11,25,25,-12,-15,25,-13,]),'COMMAND_IF':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,26,-2,-10,-6,-7,-8,-3,-4,-5,-9,26,-11,26,26,-12,-15,26,-13,]),'COMMAND_WHILE':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,27,-2,-10,-6,-7,-8,-3,-4,-5,-9,27,-11,27,27,-12,-15,27,-13,]),'COMMAND_BREAK':([0,2,3,5,7,8,9,25,29,48,49,64,96,110,111,117,118,121,123,],[-3,28,-2,-10,-6,-7,-8,-3,-4,-5,-9,28,-11,28,28,-12,-15,28,-13,]),'ID':([0,2,3,5,7,8,9,11,13,15,16,21,24,25,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,59,60,64,65,66,67,68,86,93,95,96,105,108,110,111,114,117,118,120,121,123,],[-3,22,-2,-10,-6,-7,-8,22,22,22,22,61,63,-3,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-5,-9,22,22,22,22,22,22,22,22,22,22,22,22,-11,22,116,22,22,22,-12,-15,22,22,-13,]),'$end':([0,1,2,3,5,7,8,9,29,48,49,96,117,118,123,],[-3,0,-1,-2,-10,-6,-7,-8,-4,-5,-9,-11,-12,-15,-13,]),'CLOSE_BLOCK':([3,5,7,8,9,25,29,48,49,64,96,117,118,123,],[-2,-10,-6,-7,-8,-3,-4,-5,-9,96,-11,-12,-15,-13,]),'AR_METHOD_SIZE':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[30,-24,-57,-54,-56,-60,-23,30,30,-55,-58,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-22,-40,30,30,30,30,30,30,30,-27,30,-30,-50,-53,30,30,-28,-29,30,30,30,]),'AR_METHOD_RESIZE':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[31,-24,-57,-54,-56,-60,-23,31,31,-55,-58,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-22,-40,31,31,31,31,31,31,31,-27,31,-30,-50,-53,31,31,-28,-29,31,31,31,]),'+':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[32,-24,-57,-54,-56,-60,-23,32,32,-55,-58,-49,-32,-33,-34,-35,32,32,32,32,32,32,32,32,32,32,32,32,-22,-40,32,32,32,32,32,32,32,-27,32,-30,-50,-53,32,32,-28,-29,32,32,32,]),'*':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[34,-24,-57,-54,-56,-60,-23,34,34,-55,-58,-49,34,34,-34,-35,34,34,34,34,34,34,34,34,34,34,34,34,-22,-40,34,34,34,34,34,34,34,-27,34,-30,-50,-53,34,34,-28,-29,34,34,34,]),'/':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[35,-24,-57,-54,-56,-60,-23,35,35,-55,-58,-49,35,35,-34,-35,35,35,35,35,35,35,35,35,35,35,35,35,-22,-40,35,35,35,35,35,35,35,-27,35,-30,-50,-53,35,35,-28,-29,35,35,35,]),'ASSIGN_ADD':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[36,-24,-57,-54,-56,-60,-23,36,36,-55,-58,-49,-32,-33,-34,-35,36,36,36,36,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,36,-59,36,36,36,36,36,-27,36,-30,-50,-53,36,36,-28,-29,36,-31,36,]),'ASSIGN_SUB':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[37,-24,-57,-54,-56,-60,-23,37,37,-55,-58,-49,-32,-33,-34,-35,37,37,37,37,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,37,-59,37,37,37,37,37,-27,37,-30,-50,-53,37,37,-28,-29,37,-31,37,]),'ASSIGN_MULT':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[38,-24,-57,-54,-56,-60,-23,38,38,-55,-58,-49,-32,-33,-34,-35,38,38,38,38,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,38,-59,38,38,38,38,38,-27,38,-30,-50,-53,38,38,-28,-29,38,-31,38,]),'ASSIGN_DIV':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[39,-24,-57,-54,-56,-60,-23,39,39,-55,-58,-49,-32,-33,-34,-35,39,39,39,39,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,39,-59,39,39,39,39,39,-27,39,-30,-50,-53,39,39,-28,-29,39,-31,39,]),'COMP_EQU':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[40,-24,-57,-54,-56,-60,-23,40,40,-55,-58,-49,-32,-33,-34,-35,40,40,40,40,-41,-42,-43,-44,-45,-46,40,40,-22,-40,40,40,40,40,40,40,40,-27,40,-30,-50,-53,40,40,-28,-29,40,40,40,]),'COMP_NEQU':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[41,-24,-57,-54,-56,-60,-23,41,41,-55,-58,-49,-32,-33,-34,-35,41,41,41,41,-41,-42,-43,-44,-45,-46,41,41,-22,-40,41,41,41,41,41,41,41,-27,41,-30,-50,-53,41,41,-28,-29,41,41,41,]),'<':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[42,-24,-57,-54,-56,-60,-23,42,42,-55,-58,-49,-32,-33,-34,-35,42,42,42,42,-41,-42,-43,-44,-45,-46,42,42,-22,-40,42,42,42,42,42,42,42,-27,42,-30,-50,-53,42,42,-28,-29,42,42,42,]),'COMP_LTE':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[43,-24,-57,-54,-56,-60,-23,43,43,-55,-58,-49,-32,-33,-34,-35,43,43,43,43,-41,-42,-43,-44,-45,-46,43,43,-22,-40,43,43,43,43,43,43,43,-27,43,-30,-50,-53,43,43,-28,-29,43,43,43,]),'>':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[44,-24,-57,-54,-56,-60,-23,44,44,-55,-58,-49,-32,-33,-34,-35,44,44,44,44,-41,-42,-43,-44,-45,-46,44,44,-22,-40,44,44,44,44,44,44,44,-27,44,-30,-50,-53,44,44,-28,-29,44,44,44,]),'COMP_GTE':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[45,-24,-57,-54,-56,-60,-23,45,45,-55,-58,-49,-32,-33,-34,-35,45,45,45,45,-41,-42,-43,-44,-45,-46,45,45,-22,-40,45,45,45,45,45,45,45,-27,45,-30,-50,-53,45,45,-28,-29,45,45,45,]),'BOOL_AND':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[46,-24,-57,-54,-56,-60,-23,46,46,-55,-58,-49,-32,-33,-34,-35,46,46,46,46,-41,-42,-43,-44,-45,-46,-47,46,-22,-40,46,46,46,46,46,46,46,-27,46,-30,-50,-53,46,46,-28,-29,46,46,46,]),'BOOL_OR':([4,12,14,19,20,22,51,52,53,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,97,98,99,100,102,103,104,106,107,109,112,113,115,119,122,],[47,-24,-57,-54,-56,-60,-23,47,47,-55,-58,-49,-32,-33,-34,-35,47,47,47,47,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,47,47,47,47,47,47,47,-27,47,-30,-50,-53,47,47,-28,-29,47,47,47,]),'COMMAND_ELSE':([5,7,8,9,29,48,49,96,117,118,123,],[-10,-6,-7,-8,-4,-5,-9,-11,121,-15,-13,]),']':([11,12,14,19,20,22,50,51,52,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,100,102,103,104,106,112,113,119,],[51,-24,-57,-54,-56,-60,85,-23,-25,-55,-58,-49,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,103,-59,-27,-26,-30,-50,-53,-28,-29,-31,]),',':([12,14,19,20,22,50,51,52,56,57,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,91,100,101,102,103,104,106,112,113,115,119,],[-24,-57,-54,-56,-60,86,-23,-25,-55,-58,-49,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,-59,105,-51,-27,105,-26,-30,-50,-53,-28,-29,-52,-31,]),')':([12,14,19,20,22,51,53,56,57,58,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,91,92,94,97,98,99,100,101,103,104,106,112,113,115,119,],[-24,-57,-54,-56,-60,-23,87,-55,-58,-49,100,-32,-33,-34,-35,-36,-37,-38,-39,-41,-42,-43,-44,-45,-46,-47,-48,-22,-40,-59,104,-51,106,108,110,111,112,-27,113,-30,-50,-53,-28,-29,-52,-31,]),'=':([14,22,61,63,103,116,],[55,-60,93,95,114,120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,25,],[2,64,]),'statement':([2,64,110,111,121,],[3,3,117,118,123,]),'expr':([2,11,13,16,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,55,59,60,64,65,66,67,68,86,93,95,105,110,111,114,120,121,],[4,52,53,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,92,4,97,98,99,91,102,107,109,115,4,4,119,122,4,]),'declaration':([2,64,110,111,121,],[6,6,6,6,6,]),'block':([2,64,110,111,121,],[7,7,7,7,7,]),'if_block':([2,64,110,111,121,],[8,8,8,8,8,]),'while_loop':([2,64,110,111,121,],[9,9,9,9,9,]),'break':([2,64,110,111,121,],[10,10,10,10,10,]),'variable':([2,11,13,15,16,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,55,59,60,64,65,66,67,68,86,93,95,105,110,111,114,120,121,],[14,14,14,57,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'elements':([11,],[50,]),'arguments':([59,68,],[90,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','project.py',496),
  ('statements -> statements statement','statements',2,'p_statements','project.py',503),
  ('statements -> <empty>','statements',0,'p_statements','project.py',504),
  ('statement -> expr ;','statement',2,'p_statement','project.py',515),
  ('statement -> declaration ;','statement',2,'p_statement','project.py',516),
  ('statement -> block','statement',1,'p_statement','project.py',517),
  ('statement -> if_block','statement',1,'p_statement','project.py',518),
  ('statement -> while_loop','statement',1,'p_statement','project.py',519),
  ('statement -> break ;','statement',2,'p_statement','project.py',520),
  ('statement -> ;','statement',1,'p_empty_statement','project.py',526),
  ('block -> OPEN_BLOCK statements CLOSE_BLOCK','block',3,'p_block','project.py',532),
  ('if_block -> COMMAND_IF ( expr ) statement','if_block',5,'p_if_block','project.py',538),
  ('if_block -> COMMAND_IF ( expr ) statement COMMAND_ELSE statement','if_block',7,'p_if_block','project.py',539),
  ('break -> COMMAND_BREAK','break',1,'p_break','project.py',548),
  ('while_loop -> COMMAND_WHILE ( expr ) statement','while_loop',5,'p_while_loop','project.py',555),
  ('declaration -> TYPE ID','declaration',2,'p_declaration','project.py',562),
  ('declaration -> TYPE ID = expr','declaration',4,'p_declaration','project.py',563),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID','declaration',5,'p_declaration_array','project.py',577),
  ('declaration -> ARRAY_TYPE ( TYPE ) ID = expr','declaration',7,'p_declaration_array','project.py',578),
  ('declaration -> STRING_TYPE ID','declaration',2,'p_declaration_string','project.py',593),
  ('declaration -> STRING_TYPE ID = expr','declaration',4,'p_declaration_string','project.py',594),
  ('expr -> [ elements ]','expr',3,'p_expr_ar_literal','project.py',610),
  ('expr -> [ ]','expr',2,'p_expr_ar_literal','project.py',611),
  ('expr -> STRING_LITERAL','expr',1,'p_expr_ar_literal','project.py',612),
  ('elements -> expr','elements',1,'p_elements','project.py',643),
  ('elements -> elements , expr','elements',3,'p_elements','project.py',644),
  ('expr -> expr AR_METHOD_SIZE ( )','expr',4,'p_ar_method_size','project.py',658),
  ('expr -> expr AR_METHOD_SIZE ( expr )','expr',5,'p_ar_method_size','project.py',659),
  ('expr -> expr AR_METHOD_RESIZE ( arguments )','expr',5,'p_ar_method_resize','project.py',668),
  ('expr -> variable [ expr ]','expr',4,'p_ar_index','project.py',677),
  ('expr -> variable [ expr ] = expr','expr',6,'p_ar_index','project.py',678),
  ('expr -> expr + expr','expr',3,'p_expr_addition','project.py',690),
  ('expr -> expr - expr','expr',3,'p_expr_subtraction','project.py',696),
  ('expr -> expr * expr','expr',3,'p_expr_multiplication','project.py',702),
  ('expr -> expr / expr','expr',3,'p_expr_division','project.py',709),
  ('expr -> expr ASSIGN_ADD expr','expr',3,'p_expr_comp_addition','project.py',716),
  ('expr -> expr ASSIGN_SUB expr','expr',3,'p_expr_comp_subtraction','project.py',722),
  ('expr -> expr ASSIGN_MULT expr','expr',3,'p_expr_comp_multiplication','project.py',728),
  ('expr -> expr ASSIGN_DIV expr','expr',3,'p_expr_comp_division','project.py',735),
  ('expr -> ( expr )','expr',3,'p_expr_prethesis','project.py',741),
  ('expr -> expr COMP_EQU expr','expr',3,'p_expr_eq','project.py',747),
  ('expr -> expr COMP_NEQU expr','expr',3,'p_expr_neq','project.py',754),
  ('expr -> expr < expr','expr',3,'p_expr_LT','project.py',761),
  ('expr -> expr COMP_LTE expr','expr',3,'p_expr_LE','project.py',767),
  ('expr -> expr > expr','expr',3,'p_expr_GT','project.py',773),
  ('expr -> expr COMP_GTE expr','expr',3,'p_expr_GE','project.py',779),
  ('expr -> expr BOOL_AND expr','expr',3,'p_expr_and','project.py',785),
  ('expr -> expr BOOL_OR expr','expr',3,'p_expr_or','project.py',791),
  ('expr -> ! expr','expr',2,'p_expr_not','project.py',797),
  ('expr -> COMMAND_PRINT ( arguments )','expr',4,'p_expr_print','project.py',804),
  ('arguments -> expr','arguments',1,'p_expr_print_args','project.py',810),
  ('arguments -> arguments , expr','arguments',3,'p_expr_print_args','project.py',811),
  ('expr -> COMMAND_RANDOM ( expr )','expr',4,'p_expr_random','project.py',821),
  ('expr -> VAL_LITERAL','expr',1,'p_expr_simple_val','project.py',828),
  ('expr -> - VAL_LITERAL','expr',2,'p_expr_simple_val','project.py',829),
  ('expr -> CHAR_LITERAL','expr',1,'p_expr_simple_char','project.py',838),
  ('expr -> variable','expr',1,'p_expr_simple_var','project.py',844),
  ('expr -> - variable','expr',2,'p_expr_simple_var','project.py',845),
  ('expr -> variable = expr','expr',3,'p_assignment','project.py',856),
  ('variable -> ID','variable',1,'p_check_ID','project.py',863),
]
