Executed line # 1 : store 1000(1000) 0(0)
Mem { 0:1000 }

Executed line # 6 : load 2(2) regA(0)
Regs { regA:0 }
Mem { 0:1000 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:0 regB:0 }
Mem { 0:1000 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:0 regB:0 regC:1000 }
Mem { 0:1000 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:0 regB:0 regC:1000 }
Mem { 0:1000 2:1000 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:0 regB:0 regC:1000 }
Mem { 0:1000 2:1000 1000:0 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:0 regB:0 regC:1000 regD:1001 }
Mem { 0:1000 2:1000 1000:0 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:0 regB:0 regC:1000 regD:1001 }
Mem { 0:1000 2:1000 1000:0 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:0 regB:0 regC:1000 regD:1001 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 14 : load regA(0) regD(1001)
Regs { regA:0 regB:0 regC:1000 regD:1001 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 15 : test_gtr regB(0) regD(1001) regE(0)
Regs { regA:0 regB:0 regC:1000 regD:1001 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:0 regB:0 regC:1000 regD:1001 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:0 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 18 : copy_start_0(17)
Regs { regA:0 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:0 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:0 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 26 : copy_end_0(25)
Regs { regA:0 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 2:1000 1000:0 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 1000:0 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 1000:0 1001:0 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 1000:0 1001:0 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 1000:0 1001:0 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 1000:0 1001:0 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 33 : load 0(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 34 : store regC(1001) 1(1)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 35 : store regB(0) regC(1001)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 36 : add 1(1) regC(1001) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 37 : add regB(0) regD(1002) regD(1002)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1001 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 38 : store regD(1002) 0(0)
Regs { regA:1000 regB:0 regC:1001 regD:1002 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 39 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 40 : copy_start_1(39)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 41 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 42 : jump_if_0 regE(0) copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 48 : copy_end_1(47)
Regs { regA:1000 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 49 : val_copy 1(1) regA(1)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 50 : store regA(1) 3(3)
Regs { regA:1 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 55 : load 1(1) regA(1001)
Regs { regA:1001 regB:0 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 56 : load 3(3) regB(1)
Regs { regA:1001 regB:1 regC:1001 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 57 : load 0(0) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1001 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 58 : store regC(1002) 1(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 59 : store regB(1) regC(1002)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 60 : add 1(1) regC(1002) regD(1003)
Regs { regA:1001 regB:1 regC:1002 regD:1003 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 61 : add regB(1) regD(1004) regD(1004)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1002 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 62 : store regD(1004) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:1004 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 63 : load regA(1001) regD(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:0 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 64 : test_gtr regB(1) regD(0) regE(1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 65 : jump_if_n0 regE(1) resize_start_2(-1)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1004 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 1 : store 1000(1000) 0(0)
Regs { regA:1001 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 6 : load 2(2) regA(1000)
Regs { regA:1000 regB:1 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 7 : val_copy 0(0) regB(0)
Regs { regA:1000 regB:0 regC:1002 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 8 : load 0(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 9 : store regC(1000) 2(2)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 10 : store regB(0) regC(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 11 : add 1(1) regC(1000) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 12 : add regB(0) regD(1001) regD(1001)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1000 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 13 : store regD(1001) 0(0)
Regs { regA:1000 regB:0 regC:1000 regD:1001 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 14 : load regA(1000) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:1 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 15 : test_gtr regB(0) regD(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 16 : jump_if_n0 regE(0) resize_start_0(-1)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 17 : val_copy regB(0) regD(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 18 : copy_start_0(17)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 19 : test_gtr regD(0) 0(0) regE(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 20 : jump_if_0 regE(0) copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 26 : copy_end_0(25)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 31 : load 2(2) regA(1000)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

Executed line # 32 : load regA(1000) regB(0)
Regs { regA:1000 regB:0 regC:1000 regD:0 regE:0 }
Mem { 0:1001 1:1002 2:1000 3:1 1000:0 1001:0 1002:1 }

